# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from spider.models.base_model_ import Model
from spider.models.entity import Entity
from spider import util


class EntitiesResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, msg: str=None, timestamp: int=None, entityids: List[str]=None, entities: List[Entity]=None):  # noqa: E501
        """EntitiesResponse - a model defined in Swagger

        :param code: The code of this EntitiesResponse.  # noqa: E501
        :type code: int
        :param msg: The msg of this EntitiesResponse.  # noqa: E501
        :type msg: str
        :param timestamp: The timestamp of this EntitiesResponse.  # noqa: E501
        :type timestamp: int
        :type entit        :param entityids: The entityids of this EntitiesResponse.  # noqa: E501
yids: List[str]
        :param entities: The entities of this EntitiesResponse.  # noqa: E501
        :type entities: List[Entity]
        """
        self.swagger_types = {
            'code': int,
            'msg': str,
            'timestamp': int,
            'entityids': List[str],
            'entities': List[Entity]
        }

        self.attribute_map = {
            'code': 'code',
            'msg': 'msg',
            'timestamp': 'timestamp',
            'entityids': 'entityids',
            'entities': 'entities'
        }

        self._code = code
        self._msg = msg
        self._timestamp = timestamp
        self._entityids = entityids
        self._entities = entities

    @classmethod
    def from_dict(cls, dikt) -> 'EntitiesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EntitiesResponse of this EntitiesResponse.  # noqa: E501
        :rtype: EntitiesResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> int:
        """Gets the code of this EntitiesResponse.


        :return: The code of this EntitiesResponse.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code: int):
        """Sets the code of this EntitiesResponse.


        :param code: The code of this EntitiesResponse.
        :type code: int
        """

        self._code = code

    @property
    def msg(self) -> str:
        """Gets the msg of this EntitiesResponse.


        :return: The msg of this EntitiesResponse.
        :rtype: str
        """
        return self._msg

    @msg.setter
    def msg(self, msg: str):
        """Sets the msg of this EntitiesResponse.


        :param msg: The msg of this EntitiesResponse.
        :type msg: str
        """

        self._msg = msg

    @property
    def timestamp(self) -> int:
        """Gets the timestamp of this EntitiesResponse.


        :return: The timestamp of this EntitiesResponse.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: int):
        """Sets the timestamp of this EntitiesResponse.


        :param timestamp: The timestamp of this EntitiesResponse.
        :type timestamp: int
        """

        self._timestamp = timestamp

    @property
    def entityids(self) -> List[str]:
        """Gets the entityids of this EntitiesResponse.


        :return: The entityids of this EntitiesResponse.
        :rtype: List[str]
        """
        return self._entityids

    @entityids.setter
    def entityids(self, entityids: List[str]):
        """Sets the entityids of this EntitiesResponse.


        :param entityids: The entityids of this EntitiesResponse.
        :type entityids: List[str]
        """

        self._entityids = entityids

    @property
    def entities(self) -> List[Entity]:
        """Gets the entities of this EntitiesResponse.


        :return: The entities of this EntitiesResponse.
        :rtype: List[Entity]
        """
        return self._entities

    @entities.setter
    def entities(self, entities: List[Entity]):
        """Sets the entities of this EntitiesResponse.


        :param entities: The entities of this EntitiesResponse.
        :type entities: List[Entity]
        """

        self._entities = entities
