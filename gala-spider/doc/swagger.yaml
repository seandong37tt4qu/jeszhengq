---
swagger: "2.0"
info:
  description: "Topo Graph Engine Service"
  version: "0.0.1"
  title: "Topo Graph Engine Service"
  contact:
    email: "zhengxian@huawei.com"
host: "0.0.0.0:11115"
basePath: "/gala-spider/api/v1"
tags:
- name: "gala-spider"
  description: "Topo Graph Engine Service"
schemes:
- "http"
paths:
  /get_status:
    get:
      tags:
      - "gala-spider"
      summary: "get Topo Graph Engine Service health status"
      description: "get Topo Graph Engine Service health status"
      operationId: "get_topo_graph_status"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BaseResponse"
      x-swagger-router-controller: "spider.controllers.gala_spider"
  /get_entities:
    get:
      tags:
      - "gala-spider"
      summary: "get observed entity list"
      description: "get observed entity list"
      operationId: "get_observed_entity_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "timestamp"
        in: "query"
        description: "the time that cared"
        required: false
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EntitiesResponse"
      x-swagger-router-controller: "spider.controllers.gala_spider"
definitions:
  EntitiesResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      msg:
        type: "string"
      timestamp:
        type: "integer"
        format: "int64"
      entityids:
        type: "array"
        items:
          type: "string"
      entities:
        type: "array"
        items:
          $ref: "#/definitions/Entity"
    example:
      code: 200
      msg: "msg"
      timestamp: 0
      entityids:
      - "host_0"
      - "task_0"
      entities:
      - entityid: "host_0"
        type: "host"
        name: "host0"
        level: "HOST"
        dependingitems: []
        dependeditems:
        - relation_id: "runs_on"
          layer: "direct"
          target:
            type: "task"
            entityid: "task_0"
        attrs:
        - key: "hostname"
          value: "host0"
          vtype: "string"
        anomaly:
          status: "ANOMALY_YES"
          anomalyitem:
          - anomaly_attr: xxx
            anomaly_type: ABOVE THRESHOLD
          - anomaly_attr: yyy
            anomaly_type: ABOVE THRESHOLD
      - entityid: "task_0"
        type: "task"
        name: "task0"
        level: "PROCESS"
        dependingitems:
        - relation_id: "runs_on"
          layer: "direct"
          target:
            type: "host"
            entityid: "host_0"
        dependeditems: []
        attrs:
        - key: "task_name"
          value: "task0"
          vtype: "string"
  Entity:
    type: "object"
    properties:
      entityid:
        type: "string"
      type:
        type: "string"
        enum:
        - "host"
        - "container"
        - "task"
        - "endpoint"
        - "tcp_link"
        - "ipvs_link"
        - "ngnix_link"
        - "haproxy_link"
      name:
        type: "string"
      level:
        type: "string"
        enum:
        - "HOST"
        - "CONTAINER"
        - "RUNTIME"
        - "PROCESS"
        - "RPC"
        - "LB"
        - "MB"
      dependingitems:
        type: "array"
        items:
          $ref: "#/definitions/Dependenceitem"
      dependeditems:
        type: "array"
        items:
          $ref: "#/definitions/Dependenceitem"
      attrs:
        type: "array"
        items:
          $ref: "#/definitions/Attr"
      anomaly:
        type: "object"
        items:
          $ref: "#/definitions/Anomaly"
    example:
      entityid: "host_0"
      type: "host"
      name: "host0"
      level: "HOST"
      dependingitems: []
      dependeditems:
      - relation_id: "runs_on"
        layer: "direct"
        target:
          type: "task"
          entityid: "task_0"
      attrs:
      - key: "hostname"
        value: "host0"
        vtype: "string"
      anomaly:
        status: "ANOMALY_YES"
        anomalyitem:
        - anomaly_attr: xxx
          anomaly_type: ABOVE THRESHOLD
        - anomaly_attr: yyy
          anomaly_type: ABOVE THRESHOLD
  Anomaly:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
          - "ANOMALY_NO"
          - "ANOMALY_YES"
          - "ANOMALY_LACKING"
      anomalyitem:
        type: "array"
        items:
          $ref: "#/definitions/AnomalyItem"
  AnomalyItem:
    type: "object"
    properties:
      anomaly_attr:
        type: "string"
      anomaly_type:
        type: "string"
        enum:
          - "BELOW THRESHOLD"
          - "ABOVE THRESHOLD"
  Dependenceitem:
    type: "object"
    properties:
      relation_id:
        type: "string"
      layer:
        type: "string"
        enum:
          - "direct"
          - "indirect"
      target:
        type: "object"
        properties:
          type:
            type: "string"
          entityid:
            type: "string"
    example:
      relation_id: "runs_on"
      layer: "direct"
      target:
        type: "host"
        entityid: "host_0"
  Attr:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
      vtype:
        type: "string"
        enum:
        - "int"
        - "string"
        - "float"
    example:
      vtype: "int"
      value: "value"
      key: "key"
  BaseResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      msg:
        type: "string"
    example:
      msg: "msg"
      code: 0
